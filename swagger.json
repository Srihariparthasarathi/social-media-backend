{
    "openapi": "3.1.0",
    "info": {
        "title": "Social Media API",
        "description": "API documentation for the Social Media platform",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3100/api/",
            "description": "Development server"
        }
    ],
    "paths": {
        "/users/signup": {
            "post": {
                "tags": ["User Management"],
                "summary": "User registration",
                "description": "Allows a new user to register by providing required details such as name, email, and password. Upon successful registration, a new user account will be created in the system.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "Username must be between 3 and 20 characters and can contain only letters and numbers",
                                        "minLength": 3,
                                        "maxLength": 20,
                                        "pattern": "^[a-zA-Z0-9]+$"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "The user's email address",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Password must be at least 8 characters long and include an uppercase letter, a lowercase letter, a number, and a special character.",
                                        "minLength": 8,
                                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&#])[A-Za-z\\d@$!%*?&#]{8,}$"
                                    }
                                },
                                "required": ["username", "email", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "userId": {
                                            "type": "integer",
                                            "description": "The unique identifier of the newly created user.",
                                            "example": 1
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "The name of the newly created user.",
                                            "example": "johndoe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "The email address of the newly created user.",
                                            "example": "user@example.com"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request due to missing or invalid fields or created with existing email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message describing the detail information of the bad request",
                                            "example": "Email is already taken"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/sign": {
            "post": {
                "tags": ["User Management"],
                "summary": "User Login",
                "description": "Allows users to log in by providing their email and password. Returns an authentication token upon successful login.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "The user's email address",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "The user's password.",
                                        "example": "StrongPassword@123"
                                    }
                                },
                                "required": ["email", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "description": "The JWT authentication token.",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "description": "The unique identifier of the user.",
                                                    "example": 1
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "description": "The email address of the user.",
                                                    "example": "user@example.com"
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "description": "The username of the user.",
                                                    "example": "srihari"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request due to invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message describing the reason for login failure.",
                                            "example": "Invalid email or password"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/posts/all": {
            "get": {
              "tags": ["Posts"],
              "summary": "Retrieve all posts",
              "description": "Get a list of all posts made by users on the platform.",
              "responses": {
                "200": {
                  "description": "Successfully retrieved the posts",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "posts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The unique identifier for the post"
                                },
                                "userid": {
                                  "type": "integer",
                                  "description": "The ID of the user who created the post"
                                },
                                "caption": {
                                  "type": "string",
                                  "description": "The caption or description of the post"
                                },
                                "imageurl": {
                                  "type": "string",
                                  "description": "The URL of the image associated with the post"
                                }
                              }
                            }
                          }
                        }
                      },
                      "example": {
                        "posts": [
                          {
                            "id": 1,
                            "userid": 1,
                            "caption": "My first post on this platform!",
                            "imageurl": "http://example.com/image1.jpg"
                          },
                          {
                            "id": 2,
                            "userid": 1,
                            "caption": "Had a great day at the beach.",
                            "imageurl": "http://example.com/image2.jpg"
                          }
                        ]
                      }
                    }
                  }
                },
                "404": {
                  "description": "No posts found",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "description": "Error message when no posts exist"
                          }
                        },
                        "example": {
                          "error": "There are no posts yet. Be the first to share and make your mark!"
                        }
                      }
                    }
                  }
                }
              }
            }
        },
        "/posts/{id}": {
            "get": {
              "tags": ["Posts"],
              "summary": "Get a post by its ID",
              "description": "Fetches a post by its ID. If the post exists, it returns the post details. Otherwise, it returns a 404 error.",
              "parameters": [
                {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "example": 1
                  },
                  "description": "ID of the post"
                }
              ],
              "responses": {
                "200": {
                  "description": "Post found",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "posts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "userid": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "caption": {
                                  "type": "string",
                                  "example": "My first post on this platform!"
                                },
                                "imageurl": {
                                  "type": "string",
                                  "example": "http://example.com/image1.jpg"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "404": {
                  "description": "Post not found",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "Please check the post ID and try again. No post found with ID: 3"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
        }

    }
}
